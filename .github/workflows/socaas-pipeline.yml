name: SOCaaS CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 8 * * 1-5'  # Run at 8 AM UTC on weekdays

env:
  AWS_REGION: eu-central-1
  TERRAFORM_VERSION: 1.5.7

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Python Security Analysis
        run: |
          python3 scripts/security_analyzer.py || echo "Security analysis completed"

      - name: Terraform Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: 'terraform/'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format
        id: fmt
        run: |
          cd terraform/environments/dev
          terraform fmt -check
          echo "fmt_exit_code=$?" >> $GITHUB_OUTPUT

      - name: Terraform Init
        run: |
          cd terraform/environments/dev
          terraform init

      - name: Terraform Validate
        run: |
          cd terraform/environments/dev
          terraform validate

      - name: Terraform Plan
        run: |
          cd terraform/environments/dev
          terraform plan -var-file=dev.tfvars

  ansible-test:
    name: Ansible Syntax Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Ansible Syntax Check
        run: |
          ansible-playbook ansible/honeypot-setup.yml --syntax-check

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: staging
    needs: [terraform-validate, ansible-test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Apply
        run: |
          cd terraform/environments/dev
          terraform init
          terraform apply -auto-approve

      - name: Update deployment status
        run: |
          echo "Staging deployment completed successfully"
          echo "Honeypot Public IP: $(cd terraform/environments/dev && terraform output -raw honeypot_public_ip)"

  security-dashboard:
    name: Generate Security Dashboard
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate Dashboard Report
        run: |
          echo "# 🛡️ SOCaaS Security Dashboard" > SECURITY_DASHBOARD.md
          echo "" >> SECURITY_DASHBOARD.md
          echo "## Pipeline Status" >> SECURITY_DASHBOARD.md
          echo "- **Last Run:** $(date)" >> SECURITY_DASHBOARD.md
          echo "- **Branch:** ${{ github.ref }}" >> SECURITY_DASHBOARD.md
          echo "- **Commit:** ${{ github.sha }}" >> SECURITY_DASHBOARD.md
          echo "" >> SECURITY_DASHBOARD.md
          echo "## Infrastructure Status" >> SECURITY_DASHBOARD.md
          echo "- **Terraform Validation:** ${{ needs.terraform-validate.result }}" >> SECURITY_DASHBOARD.md
          echo "- **Ansible Syntax:** ${{ needs.ansible-test.result }}" >> SECURITY_DASHBOARD.md
          echo "- **Security Scan:** ${{ needs.security-scan.result }}" >> SECURITY_DASHBOARD.md
          echo "" >> SECURITY_DASHBOARD.md
          echo "## AWS Services Utilized" >> SECURITY_DASHBOARD.md
          echo "- ✅ Amazon EC2 (Honeypot)" >> SECURITY_DASHBOARD.md
          echo "- ✅ Amazon VPC (Networking)" >> SECURITY_DASHBOARD.md
          echo "- ✅ AWS CloudWatch (Logging)" >> SECURITY_DASHBOARD.md
          echo "- ✅ AWS IAM (Security)" >> SECURITY_DASHBOARD.md
          echo "- 🔄 Amazon EKS (Kubernetes - Planned)" >> SECURITY_DASHBOARD.md

      - name: Upload Dashboard
        uses: actions/upload-artifact@v3
        with:
          name: security-dashboard
          path: SECURITY_DASHBOARD.md
